version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: agent_system
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent_user -d agent_system"]
      interval: 5s
      timeout: 3s
      retries: 5

  # NATS Message Queue
  nats:
    image: nats:2.10
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    command: ["--http_port", "8222", "--jetstream"]
    healthcheck:
      test: ["CMD", "nats", "server", "check"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Agent Portal (Web UI)
  portal:
    build:
      context: .
      dockerfile: Dockerfile.portal
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_system
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app

  # Agent System Core
  agents:
    build:
      context: .
      dockerfile: Dockerfile.agents
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_system
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    restart: unless-stopped

  # Prometheus (metrics)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana (dashboards)
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning

volumes:
  postgres_data:
  grafana_data:

networks:
  default:
    name: agent_network
